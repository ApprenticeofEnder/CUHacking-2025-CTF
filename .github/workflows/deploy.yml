name: deploy

on:
  workflow_dispatch:
    branches:
      - main
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TERRAFORM_DIR: terraform
  DB_NAME: pilots

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@main

      - name: Setup SSH keys
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PRIVATE_KEY_FILE: ${{ vars.SSH_PRIVATE_KEY_FILE }}
        run: |
          env
          pwd
          mkdir -p ~/.ssh
          ls ~/.ssh
          echo "$SSH_PRIVATE_KEY" > $SSH_PRIVATE_KEY_FILE
          chmod 600 $SSH_PRIVATE_KEY_FILE

      - name: Setup Ansible
        run: |
          python3 -m pip install --user ansible
          ansible-galaxy collection install -r $TERRAFORM_DIR/requirements.yml

      - name: Set version
        id: release
        run: echo ::set-output name=version::$(git describe --always)

      - name: Set image details
        id: image
        env:
          IMAGE_TAG: ${{ steps.release.outputs.version }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          IMAGE_NAME_LC="${IMAGE_NAME,,}"
          echo "IMAGE_NAME_LC=$IMAGE_NAME_LC" >> ${GITHUB_ENV}
          echo "IMAGE_TAG=${{ env.IMAGE_TAG }}" >> ${GITHUB_ENV}
          echo "IMAGE_NAME_FULL_LC=${{ env.REGISTRY }}/$IMAGE_NAME_LC:${{ env.IMAGE_TAG }}" >> ${GITHUB_ENV}

      - name: Build container image
        env:
          DATABASE_URL: postgres://postgres:${{ secrets.POSTGRES_PASSWORD }}@postgres:5432/${{ env.DB_NAME }}
        run: |
          docker build --secret id=DATABASE_URL \
            -t "${{ env.IMAGE_NAME_FULL_LC }}" \
            challenge

      - name: Docker Login
        run: echo ${{ secrets.CI_PAT }} | docker login ${{ env.REGISTRY }} -u ${{ github.repository_owner }} --password-stdin

      - name: Push image to Docker Registry
        run: docker push "${{ env.IMAGE_NAME_FULL_LC }}"

      - name: Deploy
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
          # For some reason DO spaces uses an AWS prefix????????
          AWS_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
          TF_VAR_ansible_ssh_private_key_file: ${{ env.SSH_PRIVATE_KEY_FILE }}
          TF_VAR_postgres_password: ${{ secrets.POSTGRES_PASSWORD }}
          TF_VAR_image_registry: ${{ env.REGISTRY }}
          TF_VAR_challenge_image_name: ${{ env.IMAGE_NAME_LC }}
          TF_VAR_challenge_image_tag: ${{ env.IMAGE_TAG }}
        run: |
          # install opentofu
          scripts/install-opentofu.sh --install-method deb
          tofu -version
          # apply infra changes
          cd $TERRAFORM_DIR
          tofu init
          tofu validate
          tofu plan -out .terraform-plan
          tofu apply .terraform-plan
