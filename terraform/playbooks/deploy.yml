---
- name: "Deploy Services"
  hosts: manager
  become: true
  vars_files:
    - "../vars/vars.yml"
    - "../vars/vault.yml"
  vars:
    image_registry: "ghcr.io"
    challenge_image: ""
    challenge_port: 3000
    challenge_instances: 3
    db_instances: 1

  tasks:
    - name: Remove existing services and network
      block:
        - name: Remove existing services
          community.docker.docker_swarm_service:
            name: "{{ item }}"
            state: absent
          loop:
            - challenge
            - "{{ postgres_hostname }}"

        - name: Remove existing network
          community.docker.docker_network:
            name: challenge_network
            state: absent

    - name: Log in to container registry
      community.docker.docker_login:
        registry_url: "{{ image_registry }}"
        username: "{{ image_registry_username }}"
        password: "{{ image_registry_password }}"

    - name: Create challenge network
      community.docker.docker_network:
        name: challenge_network
        driver: overlay
        driver_options:
          ingress: true
        scope: global
        force: true

    - name: Create postgres volume
      community.docker.docker_volume:
        name: postgres_volume

    - name: Create postgres service
      community.docker.docker_swarm_service:
        name: "{{ postgres_hostname }}"
        image: "postgres:17"
        networks:
          - challenge_network
        mounts:
          - source: postgres_volume
            target: "/var/lib/postgresql/data"
            type: volume
        replicas: "{{ db_instances | int }}"
        env:
          POSTGRES_PASSWORD: "{{ postgres_password }}"
          POSTGRES_DB: "{{ postgres_db }}"
          POSTGRES_USER: "{{ postgres_user }}"

    - name: Create challenge service
      community.docker.docker_swarm_service:
        name: challenge
        image: "{{ challenge_image }}"
        networks:
          - challenge_network
        replicas: "{{ challenge_instances | int }}"
        env:
          DATABASE_URL: "{{ postgres_url }}"
        publish:
          - published_port: 80
            target_port: "{{ challenge_port | int }}"
