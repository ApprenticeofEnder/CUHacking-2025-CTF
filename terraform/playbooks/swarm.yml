---
# determine the status of each manager node and break them
# into two groups:
#   - swarm_manager_operational (swarm is running and active)
#   - swarm_manager_bootstrap (host needs to be joined to the cluster)
- name: Initialize swarm manager
  hosts: manager
  become: true
  vars:
    manager_ip: ""
  tasks:
    - name: Init swarm
      community.docker.docker_swarm:
        state: present
        advertise_addr: "{{ manager_ip }}"
      register: result

- name: Initialize swarm worker
  hosts: worker
  become: true
  vars:
    manager_ip:
  tasks:
    - name: Get worker node join token
      ansible.builtin.set_fact:
        join_token_worker: "{{ hostvars[groups['manager'][0]].result.swarm_facts.JoinTokens.Worker }}"

    - name: Join workers
      community.docker.docker_swarm:
        state: join
        join_token: "{{ join_token_worker }}"
        advertise_addr: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
        remote_addrs: "{{ manager_ip }}"
